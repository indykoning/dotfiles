#####################
# ALIASES #
######################

#---------------------
# BASH #
#---------------------
alias profile='vim ~/.zshrc'
alias src='source ~/.zshrc'
alias fdir='find . -type d -name'    # Attempt to find direcotory
alias ffil='find . -type f -name'    # Attempt to find file
alias parrot='curl -s parrot.live'
alias mkdir='mkdir -p -v'            # Make dirs recursively
alias mktar='tar -cvf'               # Turn into tar
alias mkgz='tar -cvzf'               # Turn into tar.gz
alias untar='tar -xvf'               # Untar
alias ungz='tar -xvzf'               # Untar.gz
alias grep='grep --color=auto'       # Colorful grep
alias ipinfo='echo "Internal info"; ifconfig; echo "\nExternal info:"; curl ifconfig.me/all' # Get ip information
alias cd='>/dev/null cd'             # Don't show path it changed to if CDPATH is used
#---------------------
# GIT #
#---------------------
alias gs='git status'
alias ga='git add'
alias gc='git commit -m'
alias gp='git push'
alias gb='git branch'
alias gco='git checkout'
alias nbr='git checkout -b'
alias chbr='git checkout'
alias gpp='git pull upstream `git rev-parse --abbrev-ref HEAD` --recurse-submodules; git push origin `git rev-parse --abbrev-ref HEAD` &'
alias commitmsg='print $(curl -s whatthecommit.com/index.txt)'
alias pup='phpunit && git push'
function resetToUpstream() {
    if [ "$1" = "" ]; then
        branch=$(git rev-parse --abbrev-ref HEAD)
    else
        branch=$1
    fi

    if [ "$branch" = "master" ]; then
        git checkout develop
    else
        git checkout master
    fi
    git branch -D $branch; git checkout --track upstream/$branch
}

#---------------------
# COMPOSER #
#---------------------
alias ci='composer install'
alias cr='composer require'

#---------------------
# YARN #
#---------------------
alias yi='yarn'
alias ya='yarn add'
alias yr='yarn remove'
alias yrd='yarn run dev'
alias yrw='yarn run watch'

#---------------------
# NPM #
#---------------------
alias ni='npm install'
alias nr='npm remove'
alias nrd='npm run dev'
alias nrw='npm run watch'

#---------------------
# LARAVEL #
#---------------------
alias pa='php artisan'
alias pas='php artisan serve'
alias pam='php artisan migrate'
alias pams='php artisan migrate --seed'
alias phpunit="vendor/bin/phpunit"

#---------------------
# MAGENTO #
#---------------------
alias m='bin/magento'
alias msu='bin/magento setup:upgrade && bin/magento cache:disable full_page layout block_html'
alias mcc='bin/magento cache:clean'
alias mcf='bin/magento cache:flush'
alias mca='bin/magento cache:clean && bin/magento cache:flush'
alias cleanup2='rm -rf generated/code var/cache var/view_preprocessed pub/static; bin/magento cache:flush'
alias mir='bin/magento indexer:reindex'
alias msetup='(composer install --ignore-platform-reqs && bin/magento setup:upgrade)'

#---------------------
# GENERAL #
#---------------------

# Import db with warden
function wimport() {
if [[ ! -f "$1" ]]; then
    echo "file does not exist"
    return 0
fi
if [[ $1 == *.sql.gz ]]; then
    pv $1 | gunzip -c | warden db import
elif [[ $1 == *.sql ]]; then
    pv $1 | warden db import
else
    echo "No recognised file extension."
    return 0
fi
}

# Get dns info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

# Download all assets for page
function scrapeUrl() {
    wget --adjust-extension --convert-links --page-requisites --span-hosts --no-host-directories "$1"
}

# Interact with clipboard, piping into or out of clipboard
function clipboard() {
    [ ! -t 0 ] && clipcopy || clippaste
}

# Manual for command
rtfm() { help $@ || info $@ || man $@ || open "http://www.google.com/search?q=$@"; }

# Pull up cheat sheet for command
function cheat {
    curl -s cheat.sh/$1 | less
}

function fixDist() {
    COMPOSER_MEMORY_LIMIT=-1 composer remove $1; COMPOSER_MEMORY_LIMIT=-1 composer require $1:$2
}

function checkCS() {
    php vendor/bin/phpcpd $1
    php vendor/bin/phpcs --standard=PSR1 $1
    php vendor/bin/phpmd $1 text cleancode,codesize,controversial,design,naming,unusedcode
    php vendor/bin/phpcs --standard=Magento2 --extensions=php,phtml $1
}

